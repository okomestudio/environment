#!/bin/bash
#
# Execute shell command via ssh on each instance of an EMR cluster
#
# Requirements
# ------------
#
# $ sudo apt-get install jq
# $ sudo apt-get install pssh
# $ sudo pip install awscli
#

set -e

scriptname=$0

function usage {
  echo ""
  echo "usage: $scriptname [-i ssh_key] cluster_id command [arg ...]"
  echo ""
  echo "       ssh_key     The private key for authentication over ssh."
  echo "       cluster_id  The AWS/EMR cluster ID."
  echo "       command     Command to run on remote hosts."
  echo ""
  exit 1
}

nonopts=()
while [[ $# -gt 1 ]]
do
  key="$1"
  case $key in
    -i|--identity)
      ssh_key="$2"
      shift
      ;;
    *)
      nonopts+=("$key")
      ;;
  esac
  shift
done
nonopts+=("$1")

cluster_id=${nonopts[0]}
cmds=${nonopts[@]:1}

if [[ -z ${cluster_id} ]] || [[ -z ${cmds} ]] ; then
  usage
fi

resp=$(aws emr list-instances --cluster-id ${cluster_id})

ips=$(echo ${resp} | jq '.Instances[] | .PublicIpAddress')

hosts=()
for ip in $ips; do
  hosts+=(${ip//\"/})
done
hosts=${hosts[*]}

if which pssh > /dev/null ; then
  prog=pssh
elif which parallel-ssh > /dev/null ; then
  prog=parallel-ssh
else
  echo "ERROR: pssh not found"
  exit 1
fi

opts="-v -l hadoop"
if [[ -n ${ssh_key} ]]; then
  opts="${opts} -O IdentityFile=${ssh_key}"
  opts="${opts} -O StrictHostKeyChecking=no"
fi

${prog} -H "${hosts}" ${opts} -i "${cmds}"

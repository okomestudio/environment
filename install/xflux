#!/usr/bin/env bash
#
# xflux installer
#
# xflux is a utility for adjusting display color based on time.
#
# See: https://justgetflux.com/
#
# TODO: The vanilla xflux does not work with GeForce GTX 980. Download
# a patched version:
#
#   https://goo.gl/qKBuVw
#

set -e

function usage() {
  cat <<USAGE >&2
Usage: install/xflux [-dfhp]

  -d  Autostart a daemon with given zip code
  -f  Force reinstallation of binary
  -h  Help
  -p  Set the install prefix (default: ~/.local)

USAGE
  exit ${1:-1}
}


function error() {
  >&2 echo "ERROR: $1"
  exit ${2:-1}
}


declare -r src=https://justgetflux.com/linux/xflux64.tgz
declare -r cmd=xflux
declare dest=~/.local


function install() {
  declare src=$1
  declare dest=$2
  if [[ (! -d "$dest") || (! -w "$dest") ]]; then
    error "$dest is not a directory or is not accessible"
  fi

  declare tmpfile=$(mktemp /tmp/${cmd}.XXXXXX)

  wget -O "$tmpfile" "$src" && \
    tar -C "$dest/" -xvf "$tmpfile" && \
    chmod +x "$dest/$cmd" || \
      error "Could not finish installation"

  rm "$tmpfile"
}


while getopts "d:fhp:" opt; do
  case $opt in
    d)
      zipcode="$OPTARG"
      ;;
    f)
      force=1
      ;;
    h)
      usage 0
      ;;
    p)
      dest=$OPTARG
      ;;
    \?)
      usage
      ;;
    :)
      error "Option -$OPTARG requires an argument"
      ;;
  esac
done


if ! hash "$cmd" 2> /dev/null || [[ -n "$force" ]]; then
  install "$src" "$dest/bin"
fi


if [[ -n "$zipcode" ]]; then
  autostartpath=~/.config/autostart-scripts
  mkdir -p "$autostartpath"
  echo "xflux -z ${zipcode}" > "$autostartpath/start_xflux"
  chmod +x "$autostartpath/start_xflux"
fi

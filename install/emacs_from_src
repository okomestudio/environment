#!/usr/bin/env bash
#
# Install Emacs from source
#
# Reference:
#
#   https://www.emacswiki.org/emacs/EmacsSnapshotAndDebian
#

set -e


function usage() {
  cat <<USAGE >&2
Usage: install/emacs_from_src [-p]

  -p  Set the install prefix (default: ~/.local/emacs)"

USAGE
  exit ${1:-1}
}


function error() {
  >&2 echo "ERROR: $1"
  exit ${2:-1}
}


declare -r version=26.1
declare -r host=github.com
declare -r path=emacs-mirror/emacs/archive
declare -r src_url=https://$host/$path/emacs-$version.tar.gz

declare -r install_prefix=~/.local/emacs


function install_required_deb_packages() {
  sudo apt-get install \
       autoconf \
       automake \
       libtool \
       texinfo \
       build-essential \
       xorg-dev \
       libgtk-3-dev \
       libjpeg-dev \
       libncurses5-dev \
       libdbus-1-dev \
       libgif-dev \
       libtiff-dev \
       libm17n-dev \
       libpng-dev \
       librsvg2-dev \
       libotf-dev \
       libgnutls28-dev \
       libxml2-dev
}


function build() (
  set -e
  local builddir=$1
  local dest=$2
  local numcpu=$(grep ^cpu\\scores /proc/cpuinfo | uniq | awk '{print $4}')

  cd $builddir
  ./autogen.sh
  ./configure \
    --without-toolkit-scroll-bars \
    --with-x-toolkit=gtk3 \
    --with--m17n-flt \
    --prefix=$dest
  make -j $numcpu bootstrap
  make install
)


function main() {
  declare -r tarball_url=$1
  declare -r dest=$2

  install_required_deb_packages

  declare workdir
  workdir=$(find /tmp -maxdepth 1 -type d \
            -regex '^/tmp/emacs-build-[0-9a-zA-Z]+$')
  if [[ -z $workdir ]]; then
    workdir=$(mktemp -d /tmp/emacs-build-XXXX)
  fi
  
  declare -r tarball=$workdir/emacs.tar.gz
  declare -r builddir=$workdir/emacs

  mkdir -p $builddir

  wget $tarball_url -O $tarball
  tar -xvf $tarball -C $builddir --strip-components 1

  build "$builddir" "$dest"
  if [[ $? -ne 0 ]]; then
    error "Build failed"
  else
    # Build success
    rm -rf $workdir
  fi
}


while getopts hp: opt; do
  case $opt in
    p)
      install_prefix=$OPTARG
      ;;
    h)
      usage 0
      ;;
    \?)
      usage
      ;;
    :)
      error "Option -$OPTARG requires an argument"
      ;;
  esac
done

main "$src_url" "$install_prefix"
